---
export const prerender = true;

import Hero from "@components/sections/hero/hero.astro";
import CardSection from "@components/sections/card-section/cardSection.astro";
import AboutMe from "@components/sections/about-me/aboutMe.astro";
import type { ContactLinkType } from "@customTypes/contactLinkType";
import DisplayHeader from "@components/headers/displayHeader.astro";
import Section from "@components/sections/section.astro";
import ContactLink from "@components/buttons/contactLink.astro";
import { cmsURL } from "@/constants";
import getGlobals from "@/utils/getGlobals";
import Layout from "@/layouts/layout.astro";

const { homepageData, contacts, settings } = await getGlobals();

const caseStudiesSection = homepageData.caseStudies;

const websitesSection = homepageData.websites;

// The browser should always check freshness
Astro.response.headers.set(
  "Cache-Control",
  "public, max-age=0, must-revalidate"
);

// The CDN should cache for a year, but revalidate if the cache tag changes
Astro.response.headers.set("Netlify-Cdn-Cache-Control", "s-maxage=31536000");

// Tag the page with the book ID
Astro.response.headers.set("Netlify-Cache-Tag", "global,case-studies,websites");
Astro.response.headers.set("Cache-Tag", "global,case-studies,websites");
//Teset
---

<Layout
  pageMetaDescription={settings.siteDescription}
  pageOgMeta={{
    title: settings.ogMetadata.title,
    description: settings.ogMetadata.description,
    url: Astro.url,
    imageUrl: cmsURL + settings.ogMetadata.image.sizes.portrait.url,
    imageUrlSecure: cmsURL + settings.ogMetadata.image.sizes.portrait.url,
  }}
>
  <Hero data={homepageData.heroSection} />
  <CardSection
    bg={caseStudiesSection.bg}
    class=""
    imageAlign={caseStudiesSection.imageAlign}
    decorator={caseStudiesSection.decorator}
    subheading={caseStudiesSection.sectionSubtitle || ""}
    content={caseStudiesSection.showcasedProjects}
    id="case-studies"
  >
    <span slot="numbering">{caseStudiesSection.sectionNumber}.</span>
    <span slot="content">{caseStudiesSection.sectionTitle}</span>
  </CardSection>
  <CardSection
    bg={websitesSection.bg}
    class=""
    imageAlign={websitesSection.imageAlign}
    decorator={websitesSection.decorator}
    subheading={websitesSection.sectionSubtitle || ""}
    content={websitesSection.showcasedProjects}
    id="websites"
  >
    <span slot="numbering">{websitesSection.sectionNumber}.</span>
    <span slot="content">{websitesSection.sectionTitle}</span>
  </CardSection>
  <AboutMe data={homepageData.aboutMe} />
  <Section class={["bg-white pt-10 md:pt-15 pb-20"]} id="contact">
    <div>
      <DisplayHeader class="">{homepageData.contact.header}</DisplayHeader>
      <ul class="pt-15 flex flex-row flex-wrap gap-y-10 gap-x-30">
        {
          contacts.contactLinks.map((link: ContactLinkType) => (
            <ContactLink href={link.url} label={link.title}>
              {link.title}
            </ContactLink>
          ))
        }
      </ul>
    </div>
  </Section>
</Layout>

<style>
  body {
    background-color: var(--color-gray);
  }
</style>
